#FROM jupyter/base-notebook:python-3.9.13
#
#USER root
#
## Install OS dependencies
#RUN apt-get update
#RUN apt-get install -y git-core ffmpeg espeak-ng wget gnupg
#RUN apt-get clean
#RUN rm -rf /var/lib/apt/lists/*
#
## Install CUDA
#RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin
#RUN mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600
#RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub
#RUN add-apt-repository "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /"
#RUN apt-get update
#RUN apt-get -y install cuda
#
## Update Conda, create the voicecraft environment, and install dependencies
#RUN conda update -y -n base -c conda-forge conda
#RUN conda create -y -n voicecraft python=3.9.16
#RUN conda run -n voicecraft conda install -y -c conda-forge montreal-forced-aligner=2.2.17 openfst=1.8.2 kaldi=5.5.1068
#RUN conda run -n voicecraft mfa model download dictionary english_us_arpa
#RUN conda run -n voicecraft mfa model download acoustic english_us_arpa
#RUN conda run -n voicecraft pip install -U audiocraft
#RUN conda run -n voicecraft pip install -U git+https://git@github.com/facebookresearch/audiocraft#egg=audiocraft
#RUN conda run -n voicecraft pip install torch==2.0.1 torchvision==0.15.2 torchaudio==2.0.2 --index-url https://download.pytorch.org/whl/cu110
#RUN conda run -n voicecraft pip install tensorboard==2.16.2
#RUN conda run -n voicecraft pip install phonemizer==3.2.1
#RUN conda run -n voicecraft pip install datasets==2.16.0
#RUN conda run -n voicecraft pip install torchmetrics==0.11.1
#RUN conda run -n voicecraft pip install huggingface_hub==0.22.2
#RUN conda run -n voicecraft pip install xformers
#
## Install the Jupyter kernel
#RUN conda install -n voicecraft ipykernel --update-deps --force-reinstall -y && \
#    conda run -n voicecraft python -m ipykernel install --name=voicecraft
#
## Set NVIDIA environment variables
#ENV PATH /usr/local/cuda/bin:${PATH}
#ENV LD_LIBRARY_PATH /usr/local/cuda/lib64:${LD_LIBRARY_PATH}
#
## Enable NVIDIA runtime
#LABEL com.nvidia.volumes.needed="nvidia_driver"
#ENV NVIDIA_VISIBLE_DEVICES all
#ENV NVIDIA_DRIVER_CAPABILITIES compute,utility
#
## docker build -f DockerFile-3 -t voicecraft-3 .
## docker run --rm -it -p 8888:8888 --gpus all voicecraft-3

FROM jupyter/base-notebook:python-3.9.13

USER root

# Install OS dependencies
RUN apt-get update
RUN apt-get install -y git-core ffmpeg espeak-ng wget gnupg
RUN apt-get clean
RUN rm -rf /var/lib/apt/lists/*

# Install CUDA
RUN wget http://developer.download.nvidia.com/compute/cuda/11.0.2/local_installers/cuda_11.0.2_450.51.05_linux.run
RUN sh cuda_11.0.2_450.51.05_linux.run

# Update Conda, create the voicecraft environment, and install dependencies
RUN conda update -y -n base -c conda-forge conda
RUN conda create -y -n voicecraft python=3.9.16
RUN conda run -n voicecraft conda install -y -c conda-forge montreal-forced-aligner=2.2.17 openfst=1.8.2 kaldi=5.5.1068
RUN conda run -n voicecraft mfa model download dictionary english_us_arpa
RUN conda run -n voicecraft mfa model download acoustic english_us_arpa
RUN conda run -n voicecraft pip install -U audiocraft
RUN conda run -n voicecraft pip install -U git+https://git@github.com/facebookresearch/audiocraft#egg=audiocraft
RUN conda run -n voicecraft pip install torch==2.0.1 torchvision==0.15.2 torchaudio==2.0.2 --index-url https://download.pytorch.org/whl/cu118
RUN conda run -n voicecraft pip install tensorboard==2.16.2
RUN conda run -n voicecraft pip install phonemizer==3.2.1
RUN conda run -n voicecraft pip install datasets==2.16.0
RUN conda run -n voicecraft pip install torchmetrics==0.11.1
RUN conda run -n voicecraft pip install huggingface_hub==0.22.2
RUN conda run -n voicecraft pip install xformers

# Install the Jupyter kernel
RUN conda install -n voicecraft ipykernel --update-deps --force-reinstall -y && \
    conda run -n voicecraft python -m ipykernel install --name=voicecraft

# Set NVIDIA environment variables
ENV PATH /usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH /opt/conda/envs/voicecraft/lib/python3.9/site-packages/nvidia/cuda_runtime/lib/libcudart.so.11.0

# Enable NVIDIA runtime
LABEL com.nvidia.volumes.needed="nvidia_driver"
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility

# docker build -f DockerFile-4 -t voicecraft-4 .
# docker run --rm -it -p 8888:8888 --gpus all voicecraft-4
# docker exec -it ffda2aa5f9c54a158368b40f7739ec2f34ae5607f7c19bf5d8c3cfa1b3568073 /bin/bash

